syntax = "proto3";
package JobManager;

service JobManager {
    // 上报设备状态
    rpc ReportDevice(ReportDeviceRequest) returns (ReportDeviceReply) {}

    // 下发任务，创建或取消任务
    rpc DispatchJobID(DispatchJobIDRequest) returns (stream DispatchJobIDStream) {}

    // 上报任务状态
    rpc ReportJob(ReportJobRequest) returns (ReportJobReply) {}

    // 获取任务模型
    rpc GetJobAimodel(GetJobAimodelRequest)returns(GetJobAimodelReply) {}
    // 获取任务数据集
    rpc GetJobDataset(GetJobDatasetRequest)returns(GetJobDatasetReply) {}
}

message ReportDeviceRequest {
    int32 device_id = 1;
    string device_name = 2;
    CpuInfo cpu_info = 3;
    MemoryInfo memory_info = 4;
    GpuInfo gpu_info = 5;
}
message ReportDeviceReply {
}

message ReportJobRequest {
    int64 job_id = 1;
    EnumJobStatus job_status = 2;
    int32 job_progress = 3;
    string json_result = 4;
}
message ReportJobReply {
}

message CpuInfo {
    string cpu_model = 1;
    string cpu_arch = 2;
    int32 cpu_cnt = 3;
    int32 cup_usage = 4;
}

message MemoryInfo {
    string memory_model = 1;
    int32 memory_size = 2;
    int32 memory_available = 3;
}

message GpuInfo {
    string gpu_model = 1;
    int32 memory_size = 2;
    int32 memory_available = 3;
}

message DispatchJobIDRequest {
    int32 device_id = 1;
}

message DispatchJobIDStream {
    EnumJobType job_type = 1;
    int64 job_id = 2;
}

enum EnumJobType {
    JobTypeNONE = 0;
    JobTypeCreateJob = 1;
    JobTypeCancelJob = 2;
}

enum EnumJobStatus {
    JobStatusNONE = 0;
    JobStatusWAIT = 1;
    JobStatusSTART = 2;
    JobStatusFINISH = 3;
}

message GetJobAimodelRequest {
    int64 job_id = 1;
}

message GetJobAimodelReply {
    string so_path = 1;
    string aimodel_path1 = 2;
    string aimodel_path2 = 3;
}

message GetJobDatasetRequest {
    int64 job_id = 1;
}

message GetJobDatasetReply {
    string dataset_path = 1;
}

